version: '3.6'

services:

  proxy:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.public.address=:80"
      - "--certificatesResolvers.le.acme.httpchallenge=true"
      - "--certificatesResolvers.le.acme.email=tsanyqudsi@gmail.com"
      - "--certificatesResolvers.le.acme.storage=/letsencrypt/acme.json"
      - "â€” certificatesResolvers.le.acme.httpChallenge.entryPoint=public"
    ports:
      - "80:80"
      - "1234:8080"
    networks:
      - public
    volumes:
      # To persist certificates
      - traefik-certificates:/letsencrypt
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    container_name: db_wedding
    image: postgres
    restart: on-failure
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data/
    networks:
      - default

  app:
    container_name: backend
    build:
      dockerfile: DOCKERFILE
      context: "."
    depends_on:
      - db
    ports:
      - 4000:4000
    env_file:
      - .env
    labels:
      - "traefik.docker.network=public"
      - "traefik.enable=true"
      - "traefik.port=4000"
      - "traefik.default.protocol=http"
    networks:
      - public
      - default
networks:
  public:

volumes:
  db-data:
  traefik-certificates: